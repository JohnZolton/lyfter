import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
import React, { useState, useTransition } from 'react'
import {
  ClerkProvider,
  RedirectToOrganizationProfile,
  RedirectToSignIn,
  useUser,
  SignedIn,
  SignedOut,
  SignInButton,
  UserButton
} from "@clerk/nextjs";
import { userAgent } from "next/server";
import { userInfo } from "os";
import { boolean } from "zod";
import type { User, Workout } from "@prisma/client"
import { prisma } from "~/server/db";

//@refresh reset





const Home: NextPage = () => {

  return (
    <>
      <Head>
        <title>Lyfter</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="text-white text-center flex min-h-screen   flex-col  bg-gradient-to-b from-[#000000] to-[#44454b]">
<nav className="flex items-center justify-between flex-wrap bg-black-500 p-6">
  <div className="flex items-center flex-shrink-0 text-white mr-6">
  </div>
  <div className="w-full block flex-grow lg:flex lg:items-center lg:w-auto">
    <div className="text-sm lg:flex-grow">
      <Link href="home" className="block mt-4 lg:inline-block lg:mt-0 text-slate-200 hover:text-white mr-4">Home</Link>
      <Link href="makeplan" className="block mt-4 lg:inline-block lg:mt-0 text-slate-200 hover:text-white mr-4">Edit Workout Plan</Link>
      < Link href="allworkouts" className="block mt-4 lg:inline-block lg:mt-0 text-slate-200 hover:text-white mr-4">Workout History</Link>
    </div>
    <div>
        <SignedIn>

            <div className="text-white   items-end flex p-6 items-right flex-col ">
                <UserButton appearance={{ 
                  elements: { 
                    userButtonAvatarBox: { width: 60, height: 60 } 
                    }
                  }} />
            </div>
        </SignedIn>
    </div>
  </div>
</nav>
        <div>
          <SignedIn>
          <br></br>
          <NewWorkoutUi />
          <br></br>
      <div>
      </div>
        </SignedIn>
        <SignedOut>
          {/* Signed out users get sign in button */}
          <SignInButton redirectUrl="home">
            <button className="rounded-full text-xl text-black bg-white p-3">Sign In</button>
            </SignInButton>
        </SignedOut>
      </div>
      </main>
    </>
  );
};

export default Home;

function NewWorkoutUi(){
  return(
    <div>
      <WeekForm></WeekForm>
    </div>
  )
}

function WeekForm(){
  const [daysSelected, setDaysSelected] = useState<string[]>([])
  const daysOfWeek : string[]= ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
  
  function handleCheck(newDay: string, checked: boolean){
    if (checked) {
      setDaysSelected(prevDays => [...prevDays, newDay]);
    } else {
      setDaysSelected(prevDays => prevDays.filter(day => day !== newDay));
    }
  }
  console.log(daysSelected)

  return(
    <div>
      <div className="text-3xl font-bold text-slate-300 text-center mb-4">Select Workout Days</div>
      <div className="flex flex-col items-center">
        <div className="flex flex-row items-center">
          {daysOfWeek.map((day) => (
            <div key={day} className="flex flex-col items-center">
              <span className="ml-2 text-lg">{day}</span>
              <input type="checkbox" onChange={(event)=>handleCheck(day, event.target.checked)} className="form-checkbox h-6 w-6"/>
            </div>
          ))}
        </div>
      </div>
      <WorkoutForm days={daysSelected}/>
    </div>
  )
}

interface WorkoutFormProps {
  days: string[]
}

function WorkoutForm( {days} : WorkoutFormProps){

  if (days.length === 0){ return <div></div>}

  const sortedDays = [...days].sort((a, b) => {
    const order = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    return order.indexOf(a) - order.indexOf(b);
  });

  function handleSubmit(event: React.FormEvent<HTMLFormElement>){
    event?.preventDefault()
    console.log("new workout ready")
  }
  return(
    <div>
    <div className="container mx-auto px-4 py-8">
        <h1 className="text-2xl font-bold mb-4">Create Your Weekly Workout Plan</h1>
        <form  onSubmit={handleSubmit}>
          {sortedDays.map((day) => (
            <div className="flex flex-wrap mb-4" key={day}>
              <label htmlFor={day} className="w-full sm:w-1/4">{day}:</label>
              <div className="w-full sm:w-3/4">
                <input type="text" id={day} name={day} className="w-full px-3 py-2 border text-black border-gray-400 rounded"></input>
              </div>
            </div>
          ))}
          <div className="mt-8">
            <button type="submit" className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Submit</button>
          </div>
        </form>
    </div>
    </div>
  )
}